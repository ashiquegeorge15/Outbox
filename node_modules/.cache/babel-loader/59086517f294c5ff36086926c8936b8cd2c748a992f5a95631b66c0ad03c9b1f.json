{"ast":null,"code":"import axios from 'axios';\n\n// Determine if we're in development mode\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\n// Create an instance of axios with default config\nconst api = axios.create({\n  baseURL: 'https://hiring.reachinbox.xyz/api/v1',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${(user === null || user === void 0 ? void 0 : user.token) || ''}`\n  };\n};\n\n// Mock data for API responses\nconst mockThreads = [{\n  id: '1',\n  from: 'john.doe@example.com',\n  fromName: 'John Doe',\n  to: 'me@example.com',\n  subject: 'Project Discussion Follow-up',\n  preview: 'Hey, I wanted to follow up on our meeting yesterday...',\n  body: '<p>Hey,</p><p>I wanted to follow up on our meeting yesterday. I think we have a good plan going forward with the project. Let me know if you have any questions.</p><p>Best regards,<br/>John</p>',\n  timestamp: '2023-03-15T10:30:00Z',\n  avatar: 'https://randomuser.me/api/portraits/men/1.jpg'\n}, {\n  id: '2',\n  from: 'sarah.parker@example.com',\n  fromName: 'Sarah Parker',\n  to: 'me@example.com',\n  subject: 'Monthly Report - February 2023',\n  preview: 'Please find attached the monthly report for February 2023...',\n  body: '<p>Hi there,</p><p>Please find attached the monthly report for February 2023. We exceeded our sales targets by 15% this month!</p><p>Regards,<br/>Sarah</p>',\n  timestamp: '2023-03-14T15:45:00Z',\n  avatar: 'https://randomuser.me/api/portraits/women/2.jpg'\n}, {\n  id: '3',\n  from: 'mike.wilson@example.com',\n  fromName: 'Mike Wilson',\n  to: 'me@example.com',\n  subject: 'Team Building Event',\n  preview: 'We are planning a team building event next month...',\n  body: '<p>Hello everyone,</p><p>We are planning a team building event next month. It will be on the 15th of April. Please mark your calendars!</p><p>Best,<br/>Mike</p>',\n  timestamp: '2023-03-13T09:20:00Z',\n  avatar: 'https://randomuser.me/api/portraits/men/3.jpg'\n}];\n\n// API endpoints\nconst ENDPOINTS = {\n  GOOGLE_LOGIN: 'https://hiring.reachinbox.xyz/api/v1/auth/google-login?redirect_to=https://frontend.com',\n  ONEBOX_LIST: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\n  ONEBOX_THREAD: threadId => `https://hiring.reachinbox.xyz/api/v1/onebox/${threadId}`,\n  REPLY_THREAD: threadId => `https://hiring.reachinbox.xyz/api/v1/reply/${threadId}`\n};\n\n// Function to redirect to Google login\nexport const redirectToGoogleLogin = () => {\n  window.location.href = ENDPOINTS.GOOGLE_LOGIN;\n};\n\n// API functions\nexport const loginWithGoogle = async () => {\n  // In development, always use mock data\n  if (isDevelopment) {\n    console.log('Using mock login data in development');\n    return {\n      token: 'mock_token_12345',\n      user: {\n        name: 'John Doe',\n        email: 'john.doe@example.com',\n        picture: 'https://randomuser.me/api/portraits/men/1.jpg'\n      }\n    };\n  }\n  try {\n    const response = await api.get('/auth/google-login/callback');\n    return response.data;\n  } catch (error) {\n    console.warn('Login API call failed, using mock data:', error.message);\n    return {\n      token: 'mock_token_12345',\n      user: {\n        name: 'John Doe',\n        email: 'john.doe@example.com',\n        picture: 'https://randomuser.me/api/portraits/men/1.jpg'\n      }\n    };\n  }\n};\nexport const getOneboxList = async () => {\n  // In development, always use mock data\n  if (isDevelopment) {\n    console.log('Using mock thread list in development');\n    return mockThreads;\n  }\n  try {\n    const response = await axios.get(ENDPOINTS.ONEBOX_LIST, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.warn('Onebox list API call failed, using mock data:', error.message);\n    return mockThreads;\n  }\n};\nexport const getOneboxThread = async threadId => {\n  // In development, always use mock data\n  if (isDevelopment) {\n    console.log('Using mock thread data in development');\n    const thread = mockThreads.find(t => t.id === threadId);\n    if (thread) {\n      return thread;\n    }\n    throw new Error('Thread not found');\n  }\n  try {\n    const response = await axios.get(ENDPOINTS.ONEBOX_THREAD(threadId), {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.warn('Onebox thread API call failed, using mock data:', error.message);\n    const thread = mockThreads.find(t => t.id === threadId);\n    if (thread) {\n      return thread;\n    }\n    throw new Error('Thread not found');\n  }\n};\nexport const deleteOneboxThread = async threadId => {\n  // In development, always use mock data\n  if (isDevelopment) {\n    console.log('Using mock delete response in development');\n    return {\n      success: true,\n      message: 'Thread deleted successfully (mock)'\n    };\n  }\n  try {\n    const response = await axios.delete(ENDPOINTS.ONEBOX_THREAD(threadId), {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.warn('Delete thread API call failed, using mock response:', error.message);\n    return {\n      success: true,\n      message: 'Thread deleted successfully'\n    };\n  }\n};\nexport const sendReply = async (threadId, replyData) => {\n  // In development, always use mock data\n  if (isDevelopment) {\n    console.log('Using mock reply response in development');\n    return {\n      success: true,\n      message: 'Reply sent successfully (mock)'\n    };\n  }\n  try {\n    const response = await axios.post(ENDPOINTS.REPLY_THREAD(threadId), replyData, {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.warn('Send reply API call failed, using mock response:', error.message);\n    return {\n      success: true,\n      message: 'Reply sent successfully'\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","isDevelopment","process","env","NODE_ENV","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization","error","Promise","reject","getAuthHeaders","mockThreads","id","from","fromName","to","subject","preview","body","timestamp","avatar","ENDPOINTS","GOOGLE_LOGIN","ONEBOX_LIST","ONEBOX_THREAD","threadId","REPLY_THREAD","redirectToGoogleLogin","window","location","href","loginWithGoogle","console","log","name","email","picture","response","get","data","warn","message","getOneboxList","getOneboxThread","thread","find","t","Error","deleteOneboxThread","success","delete","sendReply","replyData","post"],"sources":["C:/Users/ashiq/OneDrive/Desktop/projects/reach-in-box/Outbox/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Determine if we're in development mode\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\n// Create an instance of axios with default config\r\nconst api = axios.create({\r\n  baseURL: 'https://hiring.reachinbox.xyz/api/v1',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Helper function to get auth headers\r\nconst getAuthHeaders = () => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${user?.token || ''}`\r\n  };\r\n};\r\n\r\n// Mock data for API responses\r\nconst mockThreads = [\r\n  {\r\n    id: '1',\r\n    from: 'john.doe@example.com',\r\n    fromName: 'John Doe',\r\n    to: 'me@example.com',\r\n    subject: 'Project Discussion Follow-up',\r\n    preview: 'Hey, I wanted to follow up on our meeting yesterday...',\r\n    body: '<p>Hey,</p><p>I wanted to follow up on our meeting yesterday. I think we have a good plan going forward with the project. Let me know if you have any questions.</p><p>Best regards,<br/>John</p>',\r\n    timestamp: '2023-03-15T10:30:00Z',\r\n    avatar: 'https://randomuser.me/api/portraits/men/1.jpg'\r\n  },\r\n  {\r\n    id: '2',\r\n    from: 'sarah.parker@example.com',\r\n    fromName: 'Sarah Parker',\r\n    to: 'me@example.com',\r\n    subject: 'Monthly Report - February 2023',\r\n    preview: 'Please find attached the monthly report for February 2023...',\r\n    body: '<p>Hi there,</p><p>Please find attached the monthly report for February 2023. We exceeded our sales targets by 15% this month!</p><p>Regards,<br/>Sarah</p>',\r\n    timestamp: '2023-03-14T15:45:00Z',\r\n    avatar: 'https://randomuser.me/api/portraits/women/2.jpg'\r\n  },\r\n  {\r\n    id: '3',\r\n    from: 'mike.wilson@example.com',\r\n    fromName: 'Mike Wilson',\r\n    to: 'me@example.com',\r\n    subject: 'Team Building Event',\r\n    preview: 'We are planning a team building event next month...',\r\n    body: '<p>Hello everyone,</p><p>We are planning a team building event next month. It will be on the 15th of April. Please mark your calendars!</p><p>Best,<br/>Mike</p>',\r\n    timestamp: '2023-03-13T09:20:00Z',\r\n    avatar: 'https://randomuser.me/api/portraits/men/3.jpg'\r\n  }\r\n];\r\n\r\n// API endpoints\r\nconst ENDPOINTS = {\r\n  GOOGLE_LOGIN: 'https://hiring.reachinbox.xyz/api/v1/auth/google-login?redirect_to=https://frontend.com',\r\n  ONEBOX_LIST: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n  ONEBOX_THREAD: (threadId) => `https://hiring.reachinbox.xyz/api/v1/onebox/${threadId}`,\r\n  REPLY_THREAD: (threadId) => `https://hiring.reachinbox.xyz/api/v1/reply/${threadId}`\r\n};\r\n\r\n// Function to redirect to Google login\r\nexport const redirectToGoogleLogin = () => {\r\n  window.location.href = ENDPOINTS.GOOGLE_LOGIN;\r\n};\r\n\r\n// API functions\r\nexport const loginWithGoogle = async () => {\r\n  // In development, always use mock data\r\n  if (isDevelopment) {\r\n    console.log('Using mock login data in development');\r\n    return {\r\n      token: 'mock_token_12345',\r\n      user: {\r\n        name: 'John Doe',\r\n        email: 'john.doe@example.com',\r\n        picture: 'https://randomuser.me/api/portraits/men/1.jpg'\r\n      }\r\n    };\r\n  }\r\n\r\n  try {\r\n    const response = await api.get('/auth/google-login/callback');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.warn('Login API call failed, using mock data:', error.message);\r\n    return {\r\n      token: 'mock_token_12345',\r\n      user: {\r\n        name: 'John Doe',\r\n        email: 'john.doe@example.com',\r\n        picture: 'https://randomuser.me/api/portraits/men/1.jpg'\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const getOneboxList = async () => {\r\n  // In development, always use mock data\r\n  if (isDevelopment) {\r\n    console.log('Using mock thread list in development');\r\n    return mockThreads;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get(ENDPOINTS.ONEBOX_LIST, {\r\n      headers: getAuthHeaders()\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.warn('Onebox list API call failed, using mock data:', error.message);\r\n    return mockThreads;\r\n  }\r\n};\r\n\r\nexport const getOneboxThread = async (threadId) => {\r\n  // In development, always use mock data\r\n  if (isDevelopment) {\r\n    console.log('Using mock thread data in development');\r\n    const thread = mockThreads.find(t => t.id === threadId);\r\n    if (thread) {\r\n      return thread;\r\n    }\r\n    throw new Error('Thread not found');\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get(ENDPOINTS.ONEBOX_THREAD(threadId), {\r\n      headers: getAuthHeaders()\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.warn('Onebox thread API call failed, using mock data:', error.message);\r\n    const thread = mockThreads.find(t => t.id === threadId);\r\n    if (thread) {\r\n      return thread;\r\n    }\r\n    throw new Error('Thread not found');\r\n  }\r\n};\r\n\r\nexport const deleteOneboxThread = async (threadId) => {\r\n  // In development, always use mock data\r\n  if (isDevelopment) {\r\n    console.log('Using mock delete response in development');\r\n    return { success: true, message: 'Thread deleted successfully (mock)' };\r\n  }\r\n\r\n  try {\r\n    const response = await axios.delete(ENDPOINTS.ONEBOX_THREAD(threadId), {\r\n      headers: getAuthHeaders()\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.warn('Delete thread API call failed, using mock response:', error.message);\r\n    return { success: true, message: 'Thread deleted successfully' };\r\n  }\r\n};\r\n\r\nexport const sendReply = async (threadId, replyData) => {\r\n  // In development, always use mock data\r\n  if (isDevelopment) {\r\n    console.log('Using mock reply response in development');\r\n    return { success: true, message: 'Reply sent successfully (mock)' };\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(ENDPOINTS.REPLY_THREAD(threadId), replyData, {\r\n      headers: getAuthHeaders()\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.warn('Send reply API call failed, using mock response:', error.message);\r\n    return { success: true, message: 'Reply sent successfully' };\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
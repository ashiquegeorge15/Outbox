{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashiq\\\\OneDrive\\\\Desktop\\\\projects\\\\reach-in-box\\\\Outbox\\\\src\\\\pages\\\\AuthCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { loginWithGoogle } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: var(--background-light);\n`;\n_c = LoadingContainer;\nconst Spinner = styled.div`\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border-left-color: var(--primary-color);\n  animation: spin 1s ease infinite;\n  margin-bottom: 20px;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n_c2 = Spinner;\nconst Message = styled.p`\n  font-size: 16px;\n  color: var(--text-secondary);\n`;\n_c3 = Message;\nconst AuthCallback = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const handleCallback = async () => {\n      try {\n        // Parse the URL search parameters\n        const params = new URLSearchParams(location.search);\n        const token = params.get('token');\n        const userData = params.get('user');\n\n        // If we don't have token or user data, fallback to the API method\n        let authData;\n        if (!token || !userData) {\n          console.log('No token or user data in URL, trying API validation');\n          // Use the loginWithGoogle function which handles development/production cases\n          authData = await loginWithGoogle(token);\n        } else {\n          // Parse the user data from the URL\n          const user = JSON.parse(decodeURIComponent(userData));\n\n          // Create the auth object from URL parameters\n          authData = {\n            token,\n            user\n          };\n        }\n\n        // Save the user data to context and localStorage\n        login(authData);\n\n        // Redirect to the main app\n        navigate('/onebox');\n      } catch (error) {\n        console.error('Error handling authentication callback:', error);\n        setError('Authentication failed. Please try again.');\n        setTimeout(() => navigate('/login'), 3000);\n      }\n    };\n    handleCallback();\n  }, [login, navigate, location.search]);\n  return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(Message, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      children: \"Completing authentication, please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthCallback, \"rENNA/HTeFCGv9LKw7SS91yF9pc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c4 = AuthCallback;\nexport default AuthCallback;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LoadingContainer\");\n$RefreshReg$(_c2, \"Spinner\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"AuthCallback\");","map":{"version":3,"names":["React","useEffect","useContext","useState","useNavigate","useLocation","styled","AuthContext","loginWithGoogle","jsxDEV","_jsxDEV","LoadingContainer","div","_c","Spinner","_c2","Message","p","_c3","AuthCallback","_s","navigate","location","login","error","setError","handleCallback","params","URLSearchParams","search","token","get","userData","authData","console","log","user","JSON","parse","decodeURIComponent","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/ashiq/OneDrive/Desktop/projects/reach-in-box/Outbox/src/pages/AuthCallback.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { loginWithGoogle } from '../services/api';\r\n\r\nconst LoadingContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  background-color: var(--background-light);\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 4px solid rgba(0, 0, 0, 0.1);\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  border-left-color: var(--primary-color);\r\n  animation: spin 1s ease infinite;\r\n  margin-bottom: 20px;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Message = styled.p`\r\n  font-size: 16px;\r\n  color: var(--text-secondary);\r\n`;\r\n\r\nconst AuthCallback = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { login } = useContext(AuthContext);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleCallback = async () => {\r\n      try {\r\n        // Parse the URL search parameters\r\n        const params = new URLSearchParams(location.search);\r\n        const token = params.get('token');\r\n        const userData = params.get('user');\r\n\r\n        // If we don't have token or user data, fallback to the API method\r\n        let authData;\r\n        if (!token || !userData) {\r\n          console.log('No token or user data in URL, trying API validation');\r\n          // Use the loginWithGoogle function which handles development/production cases\r\n          authData = await loginWithGoogle(token);\r\n        } else {\r\n          // Parse the user data from the URL\r\n          const user = JSON.parse(decodeURIComponent(userData));\r\n          \r\n          // Create the auth object from URL parameters\r\n          authData = {\r\n            token,\r\n            user\r\n          };\r\n        }\r\n\r\n        // Save the user data to context and localStorage\r\n        login(authData);\r\n\r\n        // Redirect to the main app\r\n        navigate('/onebox');\r\n      } catch (error) {\r\n        console.error('Error handling authentication callback:', error);\r\n        setError('Authentication failed. Please try again.');\r\n        setTimeout(() => navigate('/login'), 3000);\r\n      }\r\n    };\r\n\r\n    handleCallback();\r\n  }, [login, navigate, location.search]);\r\n\r\n  return (\r\n    <LoadingContainer>\r\n      <Spinner />\r\n      {error ? (\r\n        <Message>{error}</Message>\r\n      ) : (\r\n        <Message>Completing authentication, please wait...</Message>\r\n      )}\r\n    </LoadingContainer>\r\n  );\r\n};\r\n\r\nexport default AuthCallback; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
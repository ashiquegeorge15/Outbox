{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashiq\\\\OneDrive\\\\Desktop\\\\projects\\\\reach-in-box\\\\Outbox\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  useEffect(() => {\n    // Check if theme preference is stored in localStorage\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setTheme(savedTheme);\n    } else {\n      // Check if user prefers dark mode based on system preference\n      const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setTheme(prefersDarkMode ? 'dark' : 'light');\n    }\n  }, []);\n  useEffect(() => {\n    // Update the data-theme attribute on document body when theme changes\n    document.body.setAttribute('data-theme', theme);\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"l0NnHMBAjTNA2m05PT0LPL3eOKc=\");\n_c = ThemeProvider;\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","savedTheme","localStorage","getItem","prefersDarkMode","window","matchMedia","matches","document","body","setAttribute","setItem","toggleTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ashiq/OneDrive/Desktop/projects/reach-in-box/Outbox/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  useEffect(() => {\r\n    // Check if theme preference is stored in localStorage\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      setTheme(savedTheme);\r\n    } else {\r\n      // Check if user prefers dark mode based on system preference\r\n      const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setTheme(prefersDarkMode ? 'dark' : 'light');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Update the data-theme attribute on document body when theme changes\r\n    document.body.setAttribute('data-theme', theme);\r\n    // Save theme preference to localStorage\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdD,QAAQ,CAACC,UAAU,CAAC;IACtB,CAAC,MAAM;MACL;MACA,MAAMG,eAAe,GAAGC,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MACtGP,QAAQ,CAACI,eAAe,GAAG,MAAM,GAAG,OAAO,CAAC;IAC9C;EACF,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd;IACAgB,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,EAAEX,KAAK,CAAC;IAC/C;IACAG,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxBZ,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,KAAK;MAAEa;IAAY,CAAE;IAAAf,QAAA,EAClDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACpB,EAAA,CA/BWF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAiC1B,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}